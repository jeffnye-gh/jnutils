#include <iostream>
#include <boost/asio.hpp>

using boost::asio::ip::tcp;

int main() {
  try {
    boost::asio::io_context io_context;

    // Connect to the server on localhost:12345
    tcp::resolver resolver(io_context);
    tcp::resolver::results_type endpoints 
                   = resolver.resolve("127.0.0.1", "12345");

    tcp::socket socket(io_context);
    boost::asio::connect(socket, endpoints);

    std::cout << "Connected to server!" << std::endl;

    while (true) {
        // Get the command from the user
        std::string command;
        std::cout << "Enter command to send to server (or 'exit' to quit): ";
        std::getline(std::cin, command);

        if (command == "exit") {
            break;
        }

        // Send the command to the server
        boost::asio::write(socket, boost::asio::buffer(command + "\n"));
    }
  } catch (std::exception &e) {
      std::cerr << "Exception: " << e.what() << std::endl;
  }

    return 0;
}

